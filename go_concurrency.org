#+TITLE:Go 동시성 프로그래밍 하기
#+STARTUP:showall

** Goroutine
   - 고루틴은 함수를 동시에 실행시키는 기능이다.
   - 다른 언어의 쓰레드보다 운영체제의 리소스를 적게 사용한다.
 
** 클로저
#+BEGIN_SRC

package main

import "fmt"

func sum(a int, b int, c  chan int) {
  c <- a + b
}

func main() {
    c := make(chan int)


    go sum(1 ,2 ,c)
    n := <-c
    fmt.Println(n)
}

#+END_SRC

** 멀티코어 활용
   
** 체널 사용
#+BEGIN_SRC

package main

import "fmt"

func sum(a int, b int, c  chan int) {
  c <- a + b
}

func main() {
    c := make(chan int)


    go sum(1 ,2 ,c)
    n := <-c
    fmt.Println(n)
}


** range close 사용하기

** Select 사용하기


** case 사용하기 

** 동기화 객체 
